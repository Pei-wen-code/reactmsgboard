{"version":3,"sources":["components/App/App.js","reportWebVitals.js","index.js"],"names":["Page","styled","div","Title","h1","MessageForm","form","MessageTextArea","textarea","SubmitButton","button","MessageList","MessageContainer","MessageHead","MessageAuthor","MessageTime","MessageBody","ErrorMessage","Loading","Message","author","time","children","App","useState","messages","setMessages","messageApiError","setMessageApiError","value","setValue","postMessageError","setPostMessageError","isLoadingPostMessage","setIsLoadingPostMessage","fetchMessages","fetch","then","res","json","data","catch","err","message","useEffect","onSubmit","e","preventDefault","method","headers","body","JSON","stringify","nickname","ok","onChange","target","console","log","onFocus","rows","toString","length","map","Date","createdAt","toLocaleString","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","theme","colors","red_300","red_400","red_500","document","getElementById"],"mappings":"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","file":"static/js/main.93df7224.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst API_ENDPOINT ='https://student-json-api.lidemy.me/comments?_sort=createdAt&_order=desc';\n\nconst Page = styled.div`\n  width: 360px;\n  margin: 0 auto;\n`;\nconst Title = styled.h1`\n  color: #333;\n`;\nconst MessageForm = styled.form`\n  margin-top: 16px;\n`;\nconst MessageTextArea = styled.textarea`\n  display: block;\n  width: 100%;\n`;\nconst SubmitButton = styled.button`\n  margin-top: 8px;\n`;\nconst MessageList = styled.div`\n  margin-top: 16px;\n`;\n\nconst MessageContainer = styled.div`\n  border: 1px solid black;\n  padding: 8px 16px;\n  border-radius: 8px;\n\n  & + & {\n    margin-top: 8px;\n  }\n`;\n\nconst MessageHead = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-bottom: 4px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.3)\n`;\nconst MessageAuthor = styled.div`\n  color: rgba(23, 78, 55, 0.3);\n  font-size: 14px;\n`;\n\nconst MessageTime = styled.div``\nconst MessageBody = styled.div`\n  margin-top: 16px;\n  font-size: 16px;\n  word-break: break-word;\n`;\n\nconst ErrorMessage = styled.div`\n  margin-top: 16px;\n  color: red;\n`;\n\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  color: white;\n  font-size: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nfunction Message({ author, time, children }) {\n  return (\n    <MessageContainer>\n      <MessageHead>\n        <MessageAuthor>{author}</MessageAuthor>\n        <MessageTime>{time}</MessageTime>\n      </MessageHead>\n      <MessageBody>{children}</MessageBody>\n    </MessageContainer>\n  );\n}\n\nMessage.propTypes = {\n  author: PropTypes.string,\n  time: PropTypes.string,\n  children: PropTypes.node,\n};\n\nfunction App() {\n  const [messages, setMessages] = useState(null);\n  const [messageApiError, setMessageApiError] = useState(null);\n  const [value, setValue] = useState();\n  const [postMessageError, setPostMessageError] = useState();\n  const [isLoadingPostMessage, setIsLoadingPostMessage] = useState(false);\n\n  const fetchMessages = () => {\n    return fetch(API_ENDPOINT)\n    .then((res) => res.json())\n    .then((data) => {\n      setMessages(data)\n    }).catch(err => {\n      setMessageApiError(err.message)\n    });\n  }\n\n  const handleTextareaChange = e => {\n    setValue(e.target.value);\n    console.log(value)\n  }\n\n  const handleTextareaFocus = () => {\n    setPostMessageError(null);\n  }\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    if (isLoadingPostMessage) {\n      return;\n    }\n    setIsLoadingPostMessage(true)\n    fetch('https://student-json-api.lidemy.me/comments', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        nickname: 'huli',\n        body: value\n      }),\n    })\n    .then(res => res.json())\n    .then(data => {\n      setIsLoadingPostMessage(false);\n      if (data.ok === 0) {\n        setPostMessageError(data.message)\n        return;\n      }\n      setValue(\"\");\n      fetchMessages();\n    })\n    .catch((err) => {\n      setIsLoadingPostMessage(false);\n      setPostMessageError(err.message);\n    })\n  };\n\n  useEffect(()=> {\n    fetchMessages();\n  }, []);\n  return (\n    <Page>\n      {isLoadingPostMessage && <Loading>Loading...</Loading>}\n      <Title>留言板</Title>\n      <MessageForm onSubmit={handleFormSubmit}>\n        <MessageTextArea \n          value={value} \n          onChange={handleTextareaChange} \n          onFocus={handleTextareaFocus}\n          rows={10} \n        />\n        <SubmitButton>送出留言</SubmitButton>\n        {postMessageError && (\n          <ErrorMessage>\n            Something went wrong. {postMessageError.toString()}\n          </ErrorMessage>\n        )}\n      </MessageForm>\n      {messageApiError && (\n        <ErrorMessage>\n          Something went wrong. {messageApiError.toString()}\n        </ErrorMessage>\n      )}\n      {messages && messages.length === 0 && <div>No message</div>}\n      <MessageList>\n        {messages && messages.map(message => (\n          <Message key={message.id} author={message.nickname} time={new Date(message.createdAt).toLocaleString()}>\n            {message.body}\n          </Message>\n        ))}\n      </MessageList>\n    </Page>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from 'styled-components'\n\nconst theme = {\n  colors: {\n    red_300: '#220000',\n    red_400: '#440000',\n    red_500: '#660000',\n  }\n}\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}